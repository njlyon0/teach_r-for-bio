{
  "hash": "879b170bfe400b3312632776cae96a02",
  "result": {
    "markdown": "---\ntitle: \"Intro to Data Science\"\nauthor: \"Lecture 4 -- Joining Data\"\nengine: knitr\nformat: \n  revealjs: \n    slide-number: c\n    scrollable: false\n    code-overflow: wrap\n    code-line-numbers: false\n    code-copy: hover\n    theme: [night, slides.scss]\n    reference-location: document\n    footer: \"[Programming in R for Biologists](https://njlyon0.github.io/teach_r-for-biologists/)\"\n---\n\n\n## A Guide to Your Process\n\n### [Scheduling]{.blue}\n\n### [Learning Objectives]{.purple}\n\n### [Practice]{.pink}\n\n### [Supporting Information]{.orange}\n\n### [Class Discussion]{.gold}\n\n## [Today's Plan]{.blue}\n\n- Joining Data\n- Function Tutorials - Claim Functions!\n\n## [Today's Learning Objectives]{.purple}\n\nAfter today's session you will be able to:\n\n. . .\n\n- Name the four major types of joins\n- Contrast / compare the four major types of joins\n- Combine data using the four major types of joins\n\n## [Join Background]{.orange}\n\n\n## [Join Types]{.orange}\n\n\n\n## [Left/Right Joins]{.orange}\n\n\n\n## [Left/Right Join Visual]{.orange}\n\n\n\n\n## [Practice: Left Joins]{.pink}\n\n![](images/hex-dplyr.png){.absolute top=0 left=1100 width=\"12%\"}\n\n\n\n\n\n## [Inner Joins]{.orange}\n\n\n## [Outer Joins]{.orange}\n\n\n## [Practice: Inner/Outer Joins]{.orange}\n\n![](images/hex-dplyr.png){.absolute top=0 left=1100 width=\"12%\"}\n\n\n\n\n## [Anti Joins]{.orange}\n\n\n## [Practice: Anti Joins]{.orange}\n\n![](images/hex-dplyr.png){.absolute top=0 left=1100 width=\"12%\"}\n\n\n\n\n## [Join Trivia - Question 1]{.gold}\n\n\n\n\n\n## [Join Trivia - Question 2]{.gold}\n\n\n\n## [Join Trivia - Question 3]{.gold}\n\n\n## [Temperature Check]{.purple}\n\n#### How are you Feeling?\n\n<p align=\"center\">\n<img src=\"comics/debugging.png\" alt=\"Comic-style graph depicting someone's emotional state as they debug code (from initial struggle and defeat to eventual triumph)\">\n</p>\n\n## [Function Tutorial Assignment]{.orange}\n\n- Picking functions today!\n\n\\\n\n- Take a moment and get your 7-10 functions list ready\n    - You may also want to pull up CRAN (just in case)\n\n\\\n\n- Any lingering questions about this assignment?\n    - Esp. any that need to be answered _before_ picking functions\n\n## [Randomizing Vectors]{.orange} {.smaller}\n\n- We'll use `sample` to randomize student order\n\n\\\n\n- `sample` has three main arguments:\n    - `x` = vector to randomize\n    - `size` = number of times to randomly sample\n    - `replace` = whether vector elements can be retrieved more than once\n\n\\\n\n. . .\n\n- In our case:\n    - `x` = vector of student names\n    - `size` = number of students\n    - `replace` = `FALSE` (don't want to double pick the same student)\n\n## [Randomizing Vectors Demo]{.orange}\n\n- Let's look at an example to clarify that\n\n```{.r code-line-numbers=\"|2|5\"}\n# Make a vector of faux students\nstudents <- c(\"albatross\", \"cactus\", \"wave\")\n\n# Randomize a vector\nsample(x = students, size = 3, replace = FALSE)\n```\n\n## [Function Tutorial: Pick Functions]{.gold} {.smaller}\n\n- Using order from `sample` we’ll claim one function each per round:\n    - Round 1: random order\n    - Round 2: reverse of Round 1 order\n    - Round 3: new random order\n\n\\\n\n. . .\n\n- Claimed functions should be entered in the Google Sheet I made for this\n\n\\\n\n. . .\n\n- We’ll go one by one so <u>do not enter functions</u> before your turn!\n\n## [Function Tutorial: Free Work]{.pink} {.smaller}\n\n- Make a new R Markdown file for this assignment\n\n\\\n\n- Write in your three functions and which package(s) they come from\n\n\\\n\n- Remember to check their help file!\n    - `?function_name`\n\n\\\n\n- The help file also (sometimes) has examples at the bottom!\n    - Feel free to **_adapt_** these for your tutorial assignment `<svg aria-label=\"Face Smile\" role=\"img\" viewBox=\"0 0 512 512\" style=\"height:1em;width:1em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Face Smile</title><path d=\"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm177.6 62.1C192.8 334.5 218.8 352 256 352s63.2-17.5 78.4-33.9c9-9.7 24.2-10.4 33.9-1.4s10.4 24.2 1.4 33.9c-22 23.8-60 49.4-113.6 49.4s-91.7-25.5-113.6-49.4c-9-9.7-8.4-24.9 1.4-33.9s24.9-8.4 33.9 1.4zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"/></svg>`{=html}\n\n## [Temperature Check]{.purple}\n\n#### How are you Feeling?\n\n<p align=\"center\">\n<img src=\"comics/debugging.png\" alt=\"Comic-style graph depicting someone's emotional state as they debug code (from initial struggle and defeat to eventual triumph)\">\n</p>\n\n\n\n## [Upcoming Due Dates]{.blue} {.smaller}\n\n::::{.columns}\n\n:::{.column width=\"50%\"}\n\n### Due before lab\n\n#### (By midnight)\n\n- Muddiest Point \\#4\n\n:::\n\n:::{.column width=\"50%\"}\n\n### Due before lecture\n\n#### (By midnight)\n\n- Homework \\#4\n- Read [Model selection in ecology and evolution](https://www.uvm.edu/~bmitchel/NR385/Johnson_Model_selection.pdf)\n\n:::\n\n::::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}