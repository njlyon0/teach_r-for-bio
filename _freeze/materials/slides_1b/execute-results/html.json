{
  "hash": "3bf5b02b412e69e5fac30bdaf12e843e",
  "result": {
    "markdown": "---\ntitle: \"Intro to Data Science\"\nauthor: \"Lab 1 -- RStudio & Base R\"\nengine: knitr\nformat: \n  revealjs: \n    slide-number: c\n    scrollable: false\n    code-overflow: wrap\n    code-line-numbers: false\n    code-copy: hover\n    theme: [night, slides.scss]\n    reference-location: document\n    footer: \"[Programming in R for Biologists](https://njlyon0.github.io/teach_r-for-biologists/)\"\n---\n\n\n## A Guide to Your Process\n\n### [Scheduling]{.blue}\n\n### [Learning Objectives]{.purple}\n\n### [Practice]{.pink}\n\n### [Supporting Information]{.orange}\n\n### [Class Discussion]{.gold}\n\n## [Today's Plan]{.blue}\n\n- Installation Check (R + RStudio)\n- Navigating RStudio\n- RStudio Projects\n- R Scripts\n- \"Base\" R\n\n## [Today's Learning Objectives]{.purple}\n\nAfter today's session you will be able to:\n\n. . .\n\n- Set up RStudio on your computer\n- Create an RStudio Project\n- Use R Scripts\n- Define fundamental base R terms\n    - E.g., object, assign, function, arguments, etc.\n- Solve simple arithmetic operations using R\n\n## [Installation Check: R & RStudio]{.gold}\n\n:::{.incremental}\n\n- Did anyone <u>_not_</u> get [R]{.blue} installed?\n\n\\\n\n- Did anyone <u>_not_</u> get [RStudio]{.orange} installed?\n\n\\\n\n- Once you have both installed, please open [RStudio]{.orange}\n\n:::\n\n## [R versus RStudio]{.orange} {.smaller}\n\n::::{.columns}\n\n:::{.column width=\"50%\"}\n\n![](images/logo-r.png){.absolute top=100 left=150 width=\"15%\"}\n\\\n\\\n\\\n\\\n\n- Access to fundamental R operations\n- Not aesthetically pleasing\n    - In my opinion `<svg aria-label=\"Face Smile\" role=\"img\" viewBox=\"0 0 512 512\" style=\"height:1em;width:1em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Face Smile</title><path d=\"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm177.6 62.1C192.8 334.5 218.8 352 256 352s63.2-17.5 78.4-33.9c9-9.7 24.2-10.4 33.9-1.4s10.4 24.2 1.4 33.9c-22 23.8-60 49.4-113.6 49.4s-91.7-25.5-113.6-49.4c-9-9.7-8.4-24.9 1.4-33.9s24.9-8.4 33.9 1.4zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"/></svg>`{=html}\n- Faster for _very_ complex operations\n    - Unlikely to matter for this course!\n\n:::\n\n:::{.column width=\"50%\"}\n\n![](images/logo-rstudio.png){.absolute top=100 left=580 width=\"35%\"}\n\\\n\\\n\\\n\\\n\n- Access to fundamental R operations\n- Allows custom aesthetics\n- Has quality-of-life improvements\n- Technically an \"[IDE]{.purple}\"\n    - <u>I</u>ntegrated <u>D</u>eveloper <u>E</u>nvironment\n\n:::\n\n::::\n\n## [RStudio Layout]{.orange} {.smaller}\n\n- Layout consisting of four [panes]{.blue}\n    - Each pane has [tabs]{.gold} that do different things\n    - You can customize which tabs are in each pane!\n- To customize options:\n    - In top menu, click \"Tools\"\n    - Select \"Global Options\"\n    - Select \"Pane Layout\"\n- I recommend the following layout:\n\n![](images/rstudio-layout.png){.absolute top=280 left=600 width=\"40%\"}\n\n## [Practice: Choose Your Colors]{.pink}\n\n- Tools `<svg aria-label=\"Arrow Right\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Arrow Right</title><path d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"/></svg>`{=html} Global Options `<svg aria-label=\"Arrow Right\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Arrow Right</title><path d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"/></svg>`{=html} Appearance \n\n- Look through some of the available color schemes\n\n- Feel free to share the name of your favorites!\n\n\\\n\n. . . \n\n- Once you've picked one that you're happy with:\n    - Click \"OK\" (in bottom left)\n\n## [RStudio Projects]{.orange}\n\n:::{.incremental}\n\n- Projects are a special way of marking a folder on your computer for R\n\n\\\n\n- You can still use the folder for other stuff though!\n\n\\\n\n- RStudio will give you benefits if you use Projects\n\n:::\n\n## [Why Use Projects?]{.orange} {.smaller}\n\n- Sets default location for reading in / saving files\n    - A.k.a. \"importing\" and \"exporting\" files\n\n\\\n\n. . .\n\n- Convenient separation among tasks you're working on!\n    - RStudio 'remembers' which files are a part of each Project\n    - Even re-opens whatever files you had opened last time you used the Project!\n\n\\\n\n. . .\n\n- Lowers risk of mixing up data / script files\n\n## [Practice: Create a Project]{.pink} {.smaller}\n\n1. Make an empty folder on your computer to make the Project in\n\n\\\n\n2. In RStudio, click \"Project: (None)\" in the top right corner\n    - Choose \"New Project...\"\n    - Pick \"Existing Directory\"\n    - Click \"Browse...\" and find the folder you made in [step 1]{.pink}\n\n\\\n\n3. If the name of the folder you made in [step 1]{.pink} shows up in the top right corner of RStudio, it worked!\n\n## [Temperature Check]{.purple}\n\n#### How are you Feeling?\n\n<p align=\"center\">\n<img src=\"comics/debugging.png\" alt=\"Comic-style graph depicting someone's emotional state as they debug code (from initial struggle and defeat to eventual triumph)\">\n</p>\n\n## [R Scripts]{.orange} {.smaller}\n\n- A code file is called a \"script\"\n    - [Microsoft Word]{.blue}:[document]{.gold} -- [R]{.blue}:[script]{.gold}\n\n\\\n\n- Lines of code written in scripts can be re-used\n    - I.e., re-\"run\"\n\n\\\n\n- Scripts can be run line-by-line manually or run all at once\n    - Running all at once = \"sourcing\" a script\n\n## [Practice: Create an R Script]{.pink} {.smaller}\n\n- Create an R script\n    - \"File\" `<svg aria-label=\"Arrow Right\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Arrow Right</title><path d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"/></svg>`{=html} \"New File\" `<svg aria-label=\"Arrow Right\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Arrow Right</title><path d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"/></svg>`{=html} \"R Script\"\n\n\\\n\n- Once created, save it as \"316_week1.R\"\n    - \"File\" `<svg aria-label=\"Arrow Right\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Arrow Right</title><path d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"/></svg>`{=html} \"Save\"\n\n\\\n\n- Note that the save location defaults to inside of your RStudio Project\n    - Another reason to use Projects!\n\n\n## [Base R Fundamentals]{.orange} {.smaller}\n\n- \"Base R\" includes a set of core functions that are broadly useful\n    - Reading in a CSV, taking an average, etc.\n\n\\\n\n- R's real power comes from \"packages\" with more advanced functions\n    - These packages are _not_ in base R\n    - We'll begin to cover these next week\n\n\\\n\n- Base R is really useful in its own right!\n\n## [Objects and Assignment]{.orange} {.smaller}\n\n- You can do math in R directly\n\n\\\n\n- More useful to use [objects]{.blue} instead of direct values\n    - [object]{.blue} = alias for a value / set of values\n\n\\\n\n- When we create an object we [assign]{.gold} some value(s) to the object\n    - Uses the [assignment operator]{.orange} (`<-`)\n    - Keyboard shortcut: Alt + hyphen\n\n\\\n\n- After you create an object, you can use it in place of its value!\n\n## [Object Example]{.gold}\n\nWe can make an object like so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_obj <- 52\n```\n:::\n\n\n\\\n\n. . . \n\nThen when we use the name of the object later...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_obj\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 52\n```\n:::\n:::\n\n\n\\\n\n... we get the value we assigned to it!\n\n## [Objects Continued]{.orange}\n\n- Useful because it lets you _flexibly_ code \n\n\\\n\n- If you know that an object only contains numbers, you can do general operations that work for any number object\n\n\\\n\n- If you had to use the actual value every time, complex operations would be brutal to code\n\n## [Practice: Object Assignment]{.pink} {.smaller}\n\n::::{.columns}\n\n:::{.column width=\"50%\"}\n\n#### Arithmetic\n\n- Calculate 576 / 3\n\n\\\n\n- Calculate (258 * 4) / 13\n\n\\\n\n- Calculate 2 + 2 - 4\n\n:::\n\n:::{.column width=\"50%\"}\n\n#### Object Practice\n\n- Create an object called `yy` with a value of 55\n    - _Hint_: remember to use the assignment operator (`<-`)\n\n\\\n\n- Create an object called `my_char` with a value of \"text\"\n    - What happens when you don't include quotation marks around \"text\"?\n\n:::\n\n::::\n\n## [Code Comments]{.orange} {.smaller}\n\n- Coding languages all allow [comments]{.gold}\n\n\\\n\n- Comments are _non-coding_ lines that explain what the code is doing in a human-readable way\n\n\\\n\n- In R, comment lines start with a hashtag (`#`)\n\n\\\n\n- Comments allow others to read your code and understand what is happening\n    - Great for <u>_future you</u>!!!_\n\n## [Code Comments]{.orange}\n\n<p align=\"center\">\n<img src=\"memes/comments.jpg\" alt=\"Person applying clown makeup as they talk about why they don't need to use code comments\" width=\"45%\">\n</p>\n\n## [Code Example]{.gold}\n\nHere are some example comments:\n\n```{.r code-line-numbers=\"|1,4\"}\n# Make an object with a value of 77\nq <- 77\n\n# Divide it by 7 and assign to a new object\np <- q / 7\n```\n\n## [Practice: Comments]{.pink} {.smaller}\n\n- Add a comment at the top of your script with the course number and your name\n\n\\\n\n. . .\n\n- For each line of code you wrote earlier:\n    - Add a comment line _above it_ explaining what that line does\n    - Use wording that makes sense to you!\n\n\\\n\n. . .\n\n- This lets your class notes be included directly with your code!\n\n## [Functions]{.orange} {.smaller}\n\n- Programming wouldn't be useful if you could only use arithmetic\n\n\\\n\n- Programming languages include [functions]{.blue} to avoid arithmetic\n    - Someone else has done the arithmetic and made an object **of that process**!\n\n\\\n\n- You can then use the function instead of doing the math yourself\n\n\\\n\n- Functions use [arguments]{.orange} to let users specify what they can modify\n\n## [Function Example]{.gold} {.smaller}\n\n- There is a function called `round` that rounds decimals either up or down\n\n\\\n\n- `round` has two arguments:\n    - `x` = the number(s) to round\n    - `digits` = the number of digits to which to round `x`\n\n\\\n\n\n- Let's look at an example\n\n. . . \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Round a decimal to 2 digits\nround(x = 62.82379110, digits = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 62.82\n```\n:::\n:::\n\n\n## [Function Help]{.gold}\n\n- Functions include help files built into R to help you use them!\n\n\\\n\n- Can be accessed by typing a `?` and then the function name\n    - E.g., `?mean`\n\n\\\n\n. . . \n\nType and run `?round` and see what happens\n\n## [Practice: Functions]{.pink} {.smaller}\n\n- Base R includes an object called `pi` that includes the first 6 digits of π\n\n\\\n\n- Using the `round` function, round `pi` to 3 digits\n\n\\\n\n. . .\n\n- Consult the help file for the square root function (`sqrt`)\n    - What argument(s) does `sqrt` expect?\n\n\\\n\n- What is the square root of pi?\n\n\\\n\n. . .\n\n- Don’t forget to add comments to each line in your script!\n\n## [Vectors and Concatenation]{.orange} {.smaller}\n\n- You can also make objects that contain several values\n    - This type of object is called a [vector]{.purple}\n\n\\\n\n- You can make vectors using \"concatenation\"\n    - \\[con-CAT-eh-nation\\]\n\n\\\n\n- R does this with a lower case `c` and parentheses\n    - You need commas between each [element]{.orange} of a vector\n    - E.g., `my_vector <- c(1, 2, 3, 4)`\n\n## [Object Classes]{.orange} {.smaller}\n\n- Objects have a [class]{.blue} that dictates what operations they support\n\n\\\n\n- Math can only be done on \"numeric\" objects\n\n\\\n\n- Text can be stored in \"character\" objects\n    - But math can’t be done on characters!\n\n\\\n\n- You can check an object's current class with the `class` function\n    - E.g., `class(my_object)`\n\n## [Object Classes Cont.]{.orange}\n\n- There are _many_ classes\n\n\\\n\n- Let's focus on 4 fundamental classes\n    - Numeric = numbers\n    - Integer = numbers without _any_ decimal places\n    - Character = text\n    - Factor = text but defines categorical groups\n\n## [Class Coercion]{.orange} {.smaller}\n\n- You can force (a.k.a. [coerce]{.pink}) an object from one class to another\n\n\\\n\n- The simplest functions to do this are all `as.<desired class>()`\n    - E.g., `as.numeric()`\n\n\\\n\n- Want to have your code treat a number like text?\n    - `my_text <- as.character(111)`\n\n\\\n\n- What happens when you try to force text into a number?\n    - `my_num <- as.numeric(\"hello\")`\n\n## [Practice: Concatenation & Classes]{.pink} {.smaller}\n\n- Concatenate the numbers 1, 4, 9, and 6 into a vector\n    - Remember to use `c`!\n    - What is the class of that vector?\n\n\\\n\n. . .\n\n- Concatenate \"hello\", \"world\", and the first vector into a _new_ vector\n    - What is the class of the _new_ vector?\n\n\\\n\n. . .\n\n- Multiply the second vector by 16; what does this return?\n\n## [Temperature Check]{.purple}\n\n#### How are you Feeling?\n\n<p align=\"center\">\n<img src=\"comics/debugging.png\" alt=\"Comic-style graph depicting someone's emotional state as they debug code (from initial struggle and defeat to eventual triumph)\">\n</p>\n\n## [Upcoming Due Dates]{.blue} {.smaller}\n\n::::{.columns}\n\n:::{.column width=\"50%\"}\n\n### Due before lecture\n\n#### (By midnight)\n\n- Homework \\#1\n- Read the British Ecological Society's [Reproducible Code Guide](https://www.britishecologicalsociety.org/wp-content/uploads/2017/12/guide-to-reproducible-code.pdf) (p.1-12)\n\n:::\n\n:::{.column width=\"50%\"}\n\n### Due before lab\n\n#### (By midnight)\n\n- Muddiest Point \\#1\n- Read the British Ecological Society's [Reproducible Code Guide](https://www.britishecologicalsociety.org/wp-content/uploads/2017/12/guide-to-reproducible-code.pdf) (p.20-25)\n\n:::\n\n::::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}