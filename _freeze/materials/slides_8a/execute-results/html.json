{
  "hash": "46b62830034c6c4df1e8fad6c30eb769",
  "result": {
    "markdown": "---\ntitle: \"Intro to Data Science\"\nauthor: \"Lecture 8 -- Custom Functions\"\nengine: knitr\nformat: \n  revealjs: \n    slide-number: c\n    scrollable: false\n    code-overflow: wrap\n    code-line-numbers: false\n    code-copy: hover\n    theme: [night, slides.scss]\n    reference-location: document\n    footer: \"[Programming in R for Biologists](https://njlyon0.github.io/teach_r-for-biologists/)\"\n---\n\n\n## A Guide to Your Process\n\n### [Scheduling]{.blue}\n\n### [Learning Objectives]{.purple}\n\n### [Practice]{.pink}\n\n### [Supporting Information]{.orange}\n\n### [Class Discussion]{.gold}\n\n## [Today's Plan]{.blue}\n\n- Muddiest Point Review\n- Custom Functions\n- Free Work on GitHub Presence\n\n\n## [Today's Learning Objectives]{.purple}\n\nAfter today's session you will be able to:\n\n. . .\n\n- Describe the process of writing a new function\n- Create a custom function to perform arithmetic\n\n## [Muddiest Point Review]{.gold}\n\n- Recurring topics from most recent MPs:\n\n\\\n\n. . . \n\n- What other topic(s) would you like to review?\n\n## [What is a \"Custom Function\"?]{.orange} {.smaller}\n\n\n\n\n## [Why Write Functions?]{.orange} {.smaller}\n\n\n\n## [Special Syntax Note]{.orange} {.smaller}\n\n\n\n## [Process of Function Writing]{.orange} {.smaller}\n\n\n\n## [Custom Function Demo]{.gold} {.smaller}\n\n\n\n## [Demo Step 1: Write Script]{.gold} {.smaller}\n\n\n\n## [Demo Step 2: Identify Inputs]{.gold} {.smaller}\n\n\n\n## [Demo Step 3: Special Format]{.gold} {.smaller}\n\n\n\n## [Demo Step 4: Use Function!]{.gold} {.smaller}\n\n\n\n\n## [Write Your Own!]{.pink} {.smaller}\n\n\n\n\n## [Temperature Check]{.purple}\n\n#### How are you Feeling?\n\n<p align=\"center\">\n<img src=\"comics/debugging.png\" alt=\"Comic-style graph depicting someone's emotional state as they debug code (from initial struggle and defeat to eventual triumph)\">\n</p>\n\n## [Setting Defaults]{.orange} {.smaller}\n\n\n\n## [Make a Default]{.pink} {.smaller}\n\n\n\n\n\n\n## [Temperature Check]{.purple}\n\n#### How are you Feeling?\n\n<p align=\"center\">\n<img src=\"comics/debugging.png\" alt=\"Comic-style graph depicting someone's emotional state as they debug code (from initial struggle and defeat to eventual triumph)\">\n</p>\n\n## [Upcoming Due Dates]{.blue} {.smaller}\n\n::::{.columns}\n:::{.column width=\"50%\"}\n\n### Due before lab\n\n#### (By midnight)\n\n- Muddiest Point \\#8\n- Homework \\#8\n    - Note reduced time to complete for this one!\n- GitHub Presence evaluation\n- _Optional_ [3^rd^ draft]{.pink} of Function Tutorials\n\n:::\n:::{.column width=\"50%\"}\n\n### Due before lecture\n\n#### (By midnight)\n\n- Final deadline for **_all_** work from a summer course\n\n\n:::\n::::\n\n## [Free Work on GitHub]{.gold} {.smaller}\n\n\n- Assignment is due at end of course (_soon!_)\n\n\\\n\nTips for success:\n\n. . .\n\n1. Check out the rubric and make sure you don't miss any \"easy\" points\n\n. . .\n\n2. Don't leave after this slide!\n\n. . .\n\n3. If you have questions, [ask them _now_]{.purple} during this free work time\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}