{
  "hash": "37301fec723432b2b85372ecd932a09a",
  "result": {
    "markdown": "---\ntitle: \"Intro to Data Science\"\nauthor: \"Lecture 3 -- R Markdowns & Data Wrangling (P1)\"\nengine: knitr\nformat: \n  revealjs: \n    slide-number: c\n    scrollable: false\n    code-overflow: wrap\n    code-line-numbers: false\n    code-copy: hover\n    theme: [night, slides.scss]\n    reference-location: document\n    footer: \"[Programming in R for Biologists](https://njlyon0.github.io/teach_r-for-biologists/)\"\n---\n\n\n## A Guide to Your Process\n\n### [Scheduling]{.blue}\n\n### [Learning Objectives]{.purple}\n\n### [Practice]{.pink}\n\n### [Supporting Information]{.orange}\n\n### [Class Discussion]{.gold}\n\n## [Today's Plan]{.blue}\n\n- R Markdown Files\n- Loading Data\n- Working with Data\n- Tidyverse - `dplyr`\n\n## [Today's Learning Objectives]{.purple}\n\nAfter today's session you will be able to:\n\n. . .\n\n- Define the three major components of RMarkdown files (.Rmd)\n- Write code to load external data into R\n- Explore data with base R tools\n- Manipulate data with `dplyr`\n\n## [GitHub Individual Work]{.gold} {.smaller}\n\n- Great work last week!\n\n\\\n\n- In the next week or two (i.e., before the second half of the course) I would like you to:\n    - Make _another_ practice repository (or maybe 2!)\n\n\\\n\n- What questions do you have about this?\n    - Does this feel reasonable to you?\n\n## [RMarkdown Files Intro]{.orange} {.smaller}\n\nRMarkdown (Rmd) files have three sections:\n\n. . . \n\n1. Metadata (YAML)\n    - Controls formatting of document\n\n\\\n\n. . . \n\n2. Plain Text\n    - Technically written in [markdown syntax]{.purple}\n\n\\\n\n. . . \n\n3. Code \"Chunks\"\n    - Essentially mini R scripts within the larger file!\n\n## [RMarkdown Analogy]{.orange}\n\n![](images/logo-r.png){.absolute top=110 left=160 width=\"15%\"}\n\n![](images/chocolate.png){.absolute top=300 left=-10 width=\"50%\"}\n\n![](images/hex-rmarkdown.png){.absolute top=105 left=720 width=\"11%\"}\n\n![](images/cookie.png){.absolute top=250 left=625 width=\"30%\"}\n\n## [Rmds Part 1: Metadata]{.orange} {.smaller}\n\n- Document formatting metadata is called YAML\n    - <u>Y</u>et <u>A</u>nother <u>M</u>arkup <u>L</u>anguage\n\n\\\n\n. . .\n\n- Defines document header information & formatting\n    - Title, Author, Date\n    - File output type\n\n\\\n\n. . .\n\n\n- Output options:\n    - HTML = like a webpage but outputs as a file rather than a living website\n    - PDF\n\n## [Rmds Part 2: Plain Text]{.orange} \n\n- Write text just like you would in MS Word / etc.\n\n\\\n\n. . .\n\n- _But_, there is no toolbar with buttons for doing formatting\n\n\\\n\n. . . \n\n- Instead [Markdown syntax]{.purple} is required to accomplish these tweaks\n\n## [Markdown Syntax]{.orange} {.smaller}\n\n- Your function tutorials have four **required** markdown styles:\n\n\\\n\n. . .\n\n1. \\# = headings (_more_ \\# = _smaller_ heading)\n2. \\_text\\_ = italics\n3. \\*\\*text\\*\\* = bold\n4. \\[text\\]\\(link\\) = hyperlinked text\n\n\\\n\nOther format options here: [markdownguide.org/basic-syntax](https://markdownguide.offshoot.io/basic-syntax/)\n\n## [Rmds Part 3: Code Chunks]{.orange} {.smaller}\n\nLet's look at the structure of an example code chunk\n\n:::{.r-stack}\n\n![](images/code-chunk.png){.fragment .fade-out}\n\n![](images/code-chunk-annotated.png){.fragment}\n\n:::\n\n\\\n\n. . .\n\nNote that chunk definition must be formatted like:\n\n    - ```{language chunk_name, option_1, option_2, ...}\n\n## [Code Chunks Options]{.orange}\n\nLet's check out three crucial code chunk options!\n\n. . . \n\n<p align=\"center\">\n<img src=\"images/code-chunk-options.png\" width=\"120%\">\n</p>\n\n. . .\n\n- For a full list of options see [here](www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf)\n\n## [Practice: RMarkdown Files]{.pink} {.smaller}\n\n![](images/hex-rmarkdown.png){.absolute top=0 left=1100 width=\"12%\"}\n\n- Install the `rmarkdown` package\n    - Remember to use the `install.packages` function\n\n\\\n\n. . .\n\n2. Create a new RMarkdown file!\n    - File `<svg aria-label=\"Arrow Right\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Arrow Right</title><path d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"/></svg>`{=html} New File `<svg aria-label=\"Arrow Right\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Arrow Right</title><path d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"/></svg>`{=html} R Markdown...\n    - In resulting pop-up, skip to bottom and click \"OK\"\n\n\\\n\n. . .\n\n3. Look at (1) YAML, (2) Plain text, and (3) code chunks\n\n    - Take notes on anything that jumps out at you\n\n\\\n\n. . .\n\n4. Click the \"knit\" button\n\n## [Temperature Check]{.purple}\n\n#### How are you Feeling?\n\n<p align=\"center\">\n<img src=\"comics/debugging.png\" alt=\"Comic-style graph depicting someone's emotional state as they debug code (from initial struggle and defeat to eventual triumph)\">\n</p>\n\n## [Loading Data]{.orange}\n\n\n## [Practice: Load Data]{.pink}\n\n\n## [Explore Data with Base R]{.orange}\n\n\n## [Practice: Base R Data Exploration]{.pink}\n\n\n## [Tidyverse Background]{.orange}\n\n\n## [`dplyr` Part 1: `filter`]{.orange}\n\n\n## [`dplyr` Part 2: `mutate`]{.orange}\n\n\n## [Column Naming Aside]{.orange}\n\n\n## [`dplyr` Part 3: `select`]{.orange}\n\n\n## [Practice: Wrangling with `dplyr`]{.pink}\n\n\n## [Temperature Check]{.purple}\n\n#### How are you Feeling?\n\n<p align=\"center\">\n<img src=\"comics/debugging.png\" alt=\"Comic-style graph depicting someone's emotional state as they debug code (from initial struggle and defeat to eventual triumph)\">\n</p>\n\n## [Upcoming Due Dates]{.blue} {.smaller}\n\n::::{.columns}\n\n:::{.column width=\"50%\"}\n\n### Due before lab\n\n#### (By midnight)\n\n- Muddiest Point \\#3\n\n:::\n\n:::{.column width=\"50%\"}\n\n### Due before lecture\n\n#### (By midnight)\n\n- Homework \\#3\n- Pick 7-10 possible functions for Function Tutorial assignment\n    - Visit: [cran.r-project.org](https://cran.r-project.org/)\n    - Click \"Packages\" in left sidebar\n    - Click \"Table of available packages, sorted by name\"\n    - Your possible functions must be from these packages!\n\n:::\n\n::::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}