---
title: "Intro to Data Science"
author: "Lab 8 -- Biodiversity + Mapping Resources"
engine: knitr
format: 
  revealjs: 
    slide-number: c
    scrollable: false
    code-overflow: wrap
    code-line-numbers: false
    code-copy: hover
    theme: [night, slides.scss]
    reference-location: document
    footer: "[Programming in R for Biologists](https://njlyon0.github.io/teach_r-for-biologists/)"
---

```{r libraries}
#| echo: false
#| message: false
#| error: false

# Load needed libraries
## install.packages("librarian")
librarian::shelf(vegan, ggplot2)
```

```{r data}
#| echo: false
#| message: false
#| error: false

# Load vegan's BCI data
data(varespec)
```

## A Guide to Your Process

### [Scheduling]{.blue}

### [Learning Objectives]{.purple}

### [Practice]{.pink}

### [Supporting Information]{.orange}

### [Class Discussion]{.gold}

## [Today's Plan]{.blue}

- Muddiest Point Review
- Biodiversity & Ecological Communities
- Future Resources
    - Including mapping & geospatial in R!

## [Today's Learning Objectives]{.purple}

After today's session you will be able to:

. . .

- Calculate diversity and species richness with R
- Compute rarefied species richness
- Create a species accumulation curve with `ggplot2`
- Identify useful parts of The Carpentries' tutorials

## [Muddiest Point Review]{.gold}

- Recurring topics from most recent MPs:

\

. . . 

- What other topic(s) would you like to review?

## [Ecology Term Glossary]{.orange} {.smaller}

- [Population]{.gold} = individuals of <u>_one_</u> species in a given habitat / area

\

. . . 

- [Community]{.blue} = individuals of <u>_multiple_</u> species in a given habitat / area

\

. . . 

- [Abundance]{.orange} = number of <u>_individuals_</u> of one or more species

\

. . . 

- [Richness]{.pink} = number of <u>_species_</u> in a given habitat / area

\

. . . 

- [Diversity]{.purple} = index derived from some combination of abundance & richness

## [Ecological Questions]{.orange} {.smaller}

- As ecologists, we're often concerned with biodiversity

\

. . . 

- Our studies often involve data like:
    - Presence or abundance of particular species
    - Number or mix of species in a habitat
    - Habitat characteristics across multiple habitats
    - Scaling the above across space or time (or both!)

\

. . . 

- A _lot_ of different questions fit under the "ecology" umbrella!

## [Ecology Data in R]{.orange} {.smaller}

- Ecological data are famously "messy"
    - A lot of field-collected information
    - Often multiple observers with their own abbreviations or acronyms
    - Many typos or inconsistencies
    - A lot of required processing before data can be visualized / analyzed

\

. . .

- Even when _everything_ goes right, <u>ecology data has a lot of variation</u>
    - The natural world has a lot of "noise" in the data

\

. . .

- Challenge is separating biologically-relevant noise from scientists’ errors!

## [Ecology R Package]{.orange} {.smaller}

- A lot of data wrangling can be done with whatever package you'd like
    - E.g., `dplyr`,  `tidyr`, base R, etc.

\

. . .

- Some of the special metrics unique to ecology need their own package

\

. . .

- Most of these tools live in the `vegan` package!

\

. . .

- Note on package name
    - Pronounced like the dietary preference
    - Short for "vegetation analysis" (developed by plant people)

## [Diversity Metrics]{.orange} {.smaller}

::::{.columns}

:::{.column width="33.33%"}

### Shannon Diversity

- Higher numbers = more diverse
- Theoretically infinite

\

- Abbreviation is H'
    - "H prime"

:::
:::{.column width="33.33%"}

:::
:::{.column width="33.33%"}


:::
::::

## [Diversity Metrics]{.orange} {.smaller}

::::{.columns}

:::{.column width="33.33%"}

### Shannon Diversity

- Higher numbers = more diverse
- Theoretically infinite

\

- Abbreviation is H'
    - "H prime"

:::
:::{.column width="33.33%"}

### Simpson Diversity

- Ranges from 0 to 1

\

- Abbreviation is D

:::
:::{.column width="33.33%"}

:::
::::

## [Diversity Metrics]{.orange} {.smaller}

::::{.columns}

:::{.column width="33.33%"}

### Shannon Diversity

- Higher numbers = more diverse
- Theoretically infinite

\

- Abbreviation is H'
    - "H prime"

:::
:::{.column width="33.33%"}

### Simpson Diversity

- Ranges from 0 to 1

\

- Abbreviation is D

:::
:::{.column width="33.33%"}

### Species Richness

- Number of species
- Regardless of number of individuals

\

- Abbreviation is S

:::
::::

## [Calculating Diversity in R]{.orange} {.smaller}

- Functions are `diversity` and `specnumber`

\

. . .

- Example syntax:
```{.r}
# Calculate diversity
vegan::diversity(x = community_df, index = "shannon")

# Calculate richness
vegan::specnumber(x = community_df)
```

\

. . .

- Note that the community data needs to be in _wide format_
    - Row = site / location
    - Column = species (either presence/absence or abundance)

## [Community Data in `vegan`]{.orange} {.smaller}

- `vegan` has some built-in community datasets

\

. . .

- We'll use a tree dataset from Barrow Colorado Island (BCI)
    - Hyper-diverse island in Panama
    - Site of a lot of groundbreaking ecological work

![](images/map-bci.png){.absolute top=300 left=700 width="50%"}

\

. . .

- Dataset is one row per sampling site
    - Columns are tree scientific names
    - Values are counts of tree species at that site

## [Practice Prep]{.pink} {.smaller}

![](images/hex-vegan.png){.absolute top=0 left=1100 width="12%"}

- Get prepared
    - Make a new script for today
    - Install/load `vegan` package
    - Load BCI data by running the following code:
    
```{.r}
data(BCI)
```
    
- Check structure of BCI object

\

. . .

- Calculate number of tree species per site (i.e., per row)
    - Use the `specnumber` function in `vegan`

\

. . .

- How many tree species are in the _first_ site?

## [Calculate Diversity]{.pink}

![](images/hex-vegan.png){.absolute top=0 left=1100 width="12%"}

- Calculate _Shannon_ diversity for the BCI data
    - What is the Shannon diversity for the first site?

\

. . .

- Calculate Simpson diversity for the BCI data
    - What is the Simpson diversity for the first site?

## [Temperature Check]{.purple}

#### How are you Feeling?

<p align="center">
<img src="comics/debugging.png" alt="Comic-style graph depicting someone's emotional state as they debug code (from initial struggle and defeat to eventual triumph)">
</p>

## [Rarefaction Background]{.orange} {.smaller}

- Known issue: inconsistent survey effort yields inconsistent data
    - If you <u>look harder</u> for species at site A than B, you'll <u>likely find more</u> at A than B

\

. . .

- [Rarefaction]{.purple} = way to (try to) account for this difference
    1. Identify site with smallest abundance of individuals (any species)
    2. Randomly pick that many individuals from sites that have more than that number
    3. Measure diversity of that random subset
    4. Re-randomize many times
    5. Average the diversity found in each random subset to get "rarefied" richness

## [Rarefaction with R]{.orange} {.smaller}

- Function for rarefaction in `vegan` is `rarefy`

\

. . .

- Example syntax:
```{.r}
# Rarefy our community data
vegan::rarefy(x = community_df,
              # `sample` argument is minimum abundance
              sample = min(community_df$abundance))
```

\

. . .

- Produces non-integer richness but that is not a problem
    - Scientists expect non-integers when you say you've rarefied the community

## [Rarefy a Community]{.pink} {.smaller}

![](images/hex-vegan.png){.absolute top=0 left=1100 width="12%"}

- Rarefy the BCI data (set `sample` to 20)
    - What is the rarefied richness of the first site?
    - How does this compare with the _actual_ richness of the first site?

\

. . .

- Let's identify the actual lowest abundance of trees
    - Run `rowSums(BCI)` and assign it to an object
    - Use `min` on that object to identify the single smallest value

\

. . .

- Rarefy the community again but set `sample` to the minimum value you found
    - How does the rarefied richness of the first site change?

## [Species Accumulation Curves]{.orange} {.smaller}

- How do you know when you've sampled "enough"?

\

. . .

- When you start sampling you find a ton of new species at first
    - Then fewer new species over time

\

. . .

- We can use that trend to quantify how much we need to sample to find "most" of the species

\

. . .

- These data are presented as a [Species Accumulation Curve]{.purple} (SAC)

## [SAC Example]{.gold} {.smaller}

```{r ex-sac}
#| fig-width: 6
#| fig-align: center

# Calculate species accumulation curves
curve_list <- vegan::specaccum(comm = varespec, method = "exact")

# Strip out relevant bit of the list
curve_df <- data.frame("sites" = curve_list$sites,
                       "richness" = curve_list$richness,
                       "sd" = curve_list$sd)

# Create a plot of this
ggplot(curve_df, aes(x = sites, y = richness, color = rev(sites))) +
  geom_point() +
  geom_errorbar(aes(ymin = richness - sd, ymax = richness + sd), width = 0.5) +
  # Customize labels
  labs(y = "Species Richness (± SD)", x = "Site Number") +
  # Customize `theme`
  theme(panel.background = element_blank(),
        legend.position = "none",
        axis.line = element_line(color = "black"),
        axis.title = element_text(size = 14),
        axis.text = element_text(size = 11))
```

## [Making a SAC]{.orange} {.smaller}

- Function for SACs in `vegan` is `specaccum`

\

. . .

- Example syntax:
```{.r}
vegan::specaccum(comm = community_df)
```

\

. . .

- One additional hurdle for this function: it returns a [**list**]{.pink}
    - A list is a class of object
    - Essentially a list is a vector of some other class (vectors, dataframes, etc.)

\

. . .

- We will cover how to pull what we want out of this list

## [Calculate Species Accumulation]{.pink} {.smaller}

![](images/hex-vegan.png){.absolute top=0 left=1100 width="12%"}

- Use `specaccum` on the BCI data and assign it to a new object

\

. . .

- Check the structure

\

. . .

- What differences do you see here from what we've done in the past?

## [Handle the List]{.pink} {.smaller}

- That worked but--as I warned you--you are left with a list
    - `ggplot2` will want a dataframe so we need to do some parsing

\

. . .

- Run the following code:
```{.r}
curve_df <- data.frame("sites" = curve_list$sites,
                       "richness" = curve_list$richness,
                       "sd" = curve_list$sd)
```
- `curve_list` should be whatever you named your species accumulation object

\

. . .

- Check the structure of the resulting data object

## [Make a SAC]{.pink} {.smaller}

![](images/hex-vegan.png){.absolute top=0 left=1100 width="12%"}
![](images/hex-ggplot2.png){.absolute top=0 left=965 width="12%"}

- Use `ggplot2` to make a graph with:
    - The curve dataframe (_not the list!_) as the data
    - Map site number to X axis
    - Map richness to Y axis
    - Customize `theme` elements in ways that spark joy for you

\

. . . 

- What does your graph look like?

\

. . . 

- For fun, you can map `color` to sites
    - Makes a prettier graph (in my opinion)

## [New `ggplot2` Geometry]{.orange} {.smaller}

- Time to learn one more geometry: error bars (`geom_errorbar`)

\

. . . 

- Example syntax:
```{.r}
# Make plot
ggplot() +
  # Add (vertical) error bars
  geom_errorbar(aes(ymin = y - g,
                    ymax = y + g),
                width = 0.5)
```

\

. . . 

- Further explanation
    - `y` = name of column mapped to Y axis
    - `g` = name of column to add/subtract from Y axis
    - `width` = how wide you want the crossbars on the error bars

## [Add Error Bars]{.pink} {.smaller}

![](images/hex-vegan.png){.absolute top=0 left=1100 width="12%"}
![](images/hex-ggplot2.png){.absolute top=0 left=965 width="12%"}

- Add the errorbar geometry to your existing graph
    - Reminder: `geom_errorbar`

\

. . . 

- Inside `aes` parentheses ymin/ymax should +/- the "sd" column
    - Set `width` to whatever you'd like

\

. . . 

- What does your final graph look like?

## [Temperature Check]{.purple}

#### How are you Feeling?

<p align="center">
<img src="comics/debugging.png" alt="Comic-style graph depicting someone's emotional state as they debug code (from initial struggle and defeat to eventual triumph)">
</p>

## [Continuing to Explore R]{.orange} {.smaller}

- You all have tackled a wide array of R tasks in this course!

\

. . .

- Even so, we've barely scratched the surface of what you can do in R

\

. . .

- If you want to continue your R journey (which I hope that you do!), there are a lot of good resources out there

\

. . .

- The big one is: [The Carpentries]{.purple}

## [The Carpentries]{.orange} {.smaller}

- What are The Carpentries?
    - Free, open-source tutorials for specific coding skills
    - Developed/maintained by educators with clear [learning objectives]{.purple}

\

. . . 

- Consistently high quality and up-to-date

\

. . . 

- Data Carpentry Lessons ([datacarpentry.org/lessons](https://datacarpentry.org/lessons/)) including:
    - Data Skills for Ecologists
    - Working with Genomics Data
    - Geospatial Data + R 
    - And many, _many_ more!

## [My Goal for You]{.purple}

#### From [Lecture 1]{.blue}!

<p align="center">
<img src="comics/r-knowledge.png" alt="Comic-style graph depicting someone's confidence with R changing over time">
</p>

## [Your Accomplishments]{.gold} {.smaller}

- In this class, [**you**]{.pink} have done the following:
    - Made and manipulated data
    - Created R scripts and RMarkdown reports
    - Explored version control & GitHub
    - Performed statistical tests
    - Written loops and your own custom function(s)
    - And so much more!

\

- If you have a CV/resume, definitely add:
    - Some (or all!) of these skills
    - Link to your GitHub profile

## [Closing Thoughts]{.gold} {.smaller}

- I had a lot of fun this summer with y'all!

\

- Your development as data scientists has been _amazing_ to witness

\

- I particularly loved how you all engaged with the Function Tutorials
    - You really made it your own
    - Found the intersection of your interests and R functions

\

- Do you have any last R / data things to discuss?

## [Upcoming Due Dates]{.blue}

- Everything must be turned in at midnight <u>tonight</u>!

\

- Turn in _everything_ you haven't yet as soon as possible
